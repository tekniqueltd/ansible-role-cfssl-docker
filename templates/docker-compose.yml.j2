version: '2'
{% if cfssl_docker_bridge|bool %}
networks:
  cfssl:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: {{ cfssl_docker_bridge_subnet }}
        gateway: {{ cfssl_docker_bridge_gateway }}

{% endif %}
services:

{% if cfssl_docker_mysql|bool and cfssl_docker_mysql_container|bool %}
  cfssl-mysql:
    container_name: cfssl-mysql
    image: "{{ cfssl_docker_mysql_image }}"
    environment:
      MYSQL_ROOT_PASSWORD: {{ cfssl_docker_mysql_root_password }}
      MYSQL_DATABASE: {{ cfssl_docker_mysql_database }}
      MYSQL_USER: {{ cfssl_docker_mysql_user }}
      MYSQL_PASSWORD: {{ cfssl_docker_mysql_password }}
{% if cfssl_docker_mysql_data_dir != "" and cfssl_docker_mysql_data_persist|bool %}
    volumes:
      - {{ cfssl_docker_mysql_data_dir }}:/var/lib/mysql
{% endif %}
{% if cfssl_docker_bridge|bool %}
    networks:
      - cfssl
{% endif %}
    restart: always
    command: >
      --server-id={{ cfssl_docker_mysql_server_id|string }}
      --character-set-server=utf8
      --collation-server=utf8_general_ci
{% endif %}

  cfssl:
    container_name: cfssl
    image: "{{ cfssl_docker_image }}:{{ cfssl_docker_version }}"
{% if cfssl_docker_mysql|bool %}
    environment:
      DB_MIGRATIONS_DIR: /go/src/github.com/cloudflare/cfssl/certdb/mysql/migrations
      DB_DRIVER: mysql
      DB_DIALECT: mysql
      DB_DSN: {{ cfssl_docker_mysql_user }}:{{ cfssl_docker_mysql_password }}@tcp({{ cfssl_docker_mysql_host }}:{{ cfssl_docker_mysql_port }})/{{ cfssl_docker_mysql_database }}?parseTime=true
{% endif %}
    volumes:
      - {{ cfssl_docker_root_directory }}/ca-key.pem:/ca-key.pem
      - {{ cfssl_docker_root_directory }}/ca.pem:/ca.pem
      - {{ cfssl_docker_root_directory }}/ca.json:/ca.json
{% if cfssl_docker_mysql|bool %}
      - {{ cfssl_docker_root_directory }}/db.json:/db.json
{% endif %}
{% if cfssl_docker_bridge|bool %}
    networks:
      - cfssl
{% endif %}
    restart: always
{% if cfssl_docker_mysql|bool and cfssl_docker_mysql_container|bool %}
    depends_on:
      - cfssl-mysql
{% endif %}
    command: ["{% if cfssl_docker_mysql|bool %}goose up && {% endif %}cfssl serve -address=0.0.0.0 -ca /ca.pem -ca-key /ca-key.pem -config /ca.json {% if cfssl_docker_mysql|bool %}-db-config /db.json{% endif %}"]

  cfssl-nginx:
    container_name: cfssl-nginx
    image: {{ cfssl_docker_nginx_image_name }}:{{ cfssl_docker_nginx_version }}
    ports:
{% if cfssl_docker_nginx_tls|bool %}
      - "443:443"
{% endif %}
      - "80:80"
    volumes:
      - {{ cfssl_docker_root_directory }}/nginx.conf:/etc/nginx/conf.d/cfssl.conf
{% if cfssl_docker_nginx_tls|bool %}
      - {{ cfssl_docker_nginx_tls_key_path }}:/etc/ssl/private/cfssl.key
      - {{ cfssl_docker_nginx_tls_cert_path }}:/etc/ssl/certs/cfssl.pem
{% if cfssl_docker_nginx_tls_verify_client|bool %}
      - {{ cfssl_docker_root_directory }}/verify-client-ca.pem:/etc/ssl/certs/verify-client-ca.pem
{% endif %}
{% endif %}
{% if cfssl_docker_bridge|bool %}
    networks:
      - cfssl
{% endif %}
    restart: always
